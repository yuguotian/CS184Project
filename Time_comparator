  usage: Collections.sort(xxx.arrayList, new TimeComparator()); 
   
   public static class TimeComparator implements Comparator<String> {
        @Override
        public int compare(String current, String target) {
            current = current.replaceAll("\\s+", "");
            target = target.replaceAll("\\s+", "");
            String[] current_time = current.split(":");
            String[] target_time = target.split(":");

            if (Integer.parseInt(current_time[0]) > Integer.parseInt(target_time[0])) {
                return -1;
            } else if (Integer.parseInt(current_time[0]) == Integer.parseInt(target_time[0])) {
                if (Integer.parseInt(current_time[1]) > Integer.parseInt(target_time[1])) {
                    return -1;
                } else if (Integer.parseInt(current_time[1]) == Integer.parseInt(target_time[1])) {
                    return 0;
                } else {
                    return 1;
                }

            } else {
                return 1;
            }
        }
    }



    public static int compareTime(String current, String target){ //Compare two time in HH:mm:ss format
        target = target.replaceAll("\\s+","");
        current = current.replaceAll("\\s+","");
        String[] current_time = current.split(":");
        String[] target_time = target.split(":");

        if(Integer.parseInt(current_time[0]) > Integer.parseInt(target_time[0])){
            return -1;
        }
        else if(Integer.parseInt(current_time[0]) == Integer.parseInt(target_time[0])){
            if(Integer.parseInt(current_time[1]) > Integer.parseInt(target_time[1])){
                return -1;
            }
            else{
                return Integer.parseInt(target_time[1]) - Integer.parseInt(current_time[1]);
            }
        }
        else{
            return (Integer.parseInt(target_time[0]) -Integer.parseInt(current_time[0])) * 60 + Integer.parseInt(target_time[1]) - Integer.parseInt(current_time[1]);
        }
    }
